name: Publish Pull Request Page

on:
  pull_request_target:
    types:
      - opened
      - synchronize

concurrency:
  group: pull-request-page
  cancel-in-progress: false

jobs:
  detect:
    if: ${{ github.event.pull_request.head.repo.full_name == 'opencast/opencast-admin-interface' }}
    runs-on: ubuntu-latest
    outputs:
      server: ${{ steps.test-server.outputs.server }}
      branch: ${{ steps.branch-name.outputs.branch }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Determine the correct test server
        id: test-server
        run: echo "server=`./.github/get-release-server.sh ${{ github.ref_name }}`" >> $GITHUB_OUTPUT

      - name: Determine branch name
        id: branch-name
        run: |
          #Temp becomes something like r/17.x
          export TEMP=${{ github.ref_name }}
          #Strip the r/ prefix, giving us just 17.x.  If this is main/develop this does nothing
          echo "branch=${TEMP#r\/}" >> $GITHUB_OUTPUT

  main:
    runs-on: ubuntu-latest
    needs: detect
    steps:
      - name: generate build path
        run: echo "build=${{github.event.number}}/$(date +%Y-%m-%d_%H-%M-%S)/" >> $GITHUB_OUTPUT
        id: build-path

      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: get node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: download dependencies
        run: npm ci

      - name: build app
        run: |
          npm run build
        env:
          VITE_TEST_SERVER_URL: ${{needs.detect.outputs.server}}
          NODE_ENV: development
          VITE_TEST_SERVER_AUTH: "admin:opencast"

      - name: prepare git
        run: |
          git config --global user.name "Admin Interface Deployment Bot"
          git config --global user.email "cloud@opencast.org"

      - name: prepare GitHub SSH key
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY_TEST }}
        run: |
          install -dm 700 ~/.ssh/
          echo "${DEPLOY_KEY}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: wait for previous workflows to finish
        uses: softprops/turnstyle@v2
        with:
          same-branch-only: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: clone repository
        run: |
          git clone -b gh-pages "git@github.com:${{ github.repository_owner }}/opencast-admin-interface-test.git" admin-interface-test

      - name: store build
        env:
          DEPLOY_PATH: admin-interface-test/${{ steps.build-path.outputs.build }}
        run: |
          mkdir -p ${DEPLOY_PATH}
          cp -rv build/* ${DEPLOY_PATH}

      - name: Cleanup test repository
        working-directory: admin-interface-test
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          wget https://raw.githubusercontent.com/${{ github.repository_owner }}/opencast-admin-interface-test/main/.github/scripts/cleanup-deployments.sh
          bash cleanup-deployments.sh ${{ github.repository_owner }}/opencast-admin-interface
          rm -f cleanup-deployments.sh
          git add .

      - name: generate index.html
        working-directory: admin-interface-test
        run: |
          echo '<html><body><ul>' > index.html
          find . -maxdepth 2 -name '*_*' -type d \
            | sort -r \
            | sed 's/^\(.*\)$/<li><a href=\1>\1<\/a><\/li>/' >> index.html
          echo '</ul></body></html>' >> index.html

      - name: commit new version
        working-directory: admin-interface-test
        run: |
          git add .
          git commit --amend -m "Build ${{ steps.build-path.outputs.build }}"

      - name: push updates
        working-directory: admin-interface-test
        run: |
          git push origin gh-pages --force

      - name: add comment with deployment location
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: static-test-deployment
          message: >
            This pull request is deployed at
            [test.admin-interface.opencast.org/${{ steps.build-path.outputs.build }}
            ](https://test.admin-interface.opencast.org/${{ steps.build-path.outputs.build }}).

            It might take a few minutes for it to become available.
