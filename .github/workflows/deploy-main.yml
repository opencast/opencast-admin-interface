name: Publish Test Page

on:
  push:
    branches:
      - develop
      - r/*.x

concurrency:
  group: ${{ github.workflow }}

jobs:
  build:
    if: github.repository_owner == 'opencast'
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: get node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: download dependencies
        run: npm ci

      - name: determine the correct test server
        id: vite-url
        run: echo "VITE_TEST_SERVER_URL=`./.github/get-release-server.sh ${{ github.ref_name }}`" >> GITHUB_ENV

      - name: build project
        env:
          VITE_TEST_SERVER_URL: ${{ steps.vite-url.outputs.VITE_TEST_SERVER_URL }}
          NODE_ENV: development
          VITE_TEST_SERVER_AUTH: "admin:opencast"
        run: npm run build

      - name: Prepare git
        run: |
          git config --global user.name "Release Bot"
          git config --global user.email "cloud@opencast.org"

      - name: Commit new version
        run: |
          git fetch origin
          git checkout gh-pages
          #Temp becomes something like r/17.x
          export TEMP=${{ github.ref_name }}
          #Strip the r/ prefix, giving us just 17.x.  If this is main/develop this does nothing
          export TARGET=${TEMP#r\/}
          # Update gh-pages
          rm -rf $TARGET
          mkdir -p $TARGET
          cp -r build/* $TARGET
          #Generate an index, in case anyone lands at the root of the test domain
          echo '<html><body><ul>' > index.html
          find . -mindepth 1 -maxdepth 1 -type d \
            | grep -v .git \
            | sort -r \
            | sed 's/^\(.*\)$/<li><a href=\1>\1<\/a><\/li>/' >> index.html
          echo '</ul></body></html>' >> index.html
          git add $TARGET
          git diff --staged --quiet || git commit --amend -m "Build $(date)"

      - name: Push updates
        run: |
          git push origin gh-pages --force
